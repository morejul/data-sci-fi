---
title: "Quarto exercise"
format: 
  html:
    embed-resources: true
    page-layout: full
    toc: true
---

In this exercise you'll set up a Quarto website hosted on GitHub that can serve as a placeholder for your first assignment.

## Set up a GitHub repository

1. Go to https://github.com/, log in with your username and password, click *Repository* and *New*.
2. Set the repository name to *dsfi-project1* (or choose your own name). Leave all the other options as is.
3. Click *Create repository*

## Set up an R project

4. Open RStudio, select *File/New Project*. 
5. Choose *New directory* and *New project*.
5. Choose a directory location and name and click *Create project*.

## Create a demo website

6. Copy the 4 files provided (*_quarto.yml*, *index.qmd*, *addition.qmd*, *multiplication.qmd*) into your project folder.
7. No action needed, but open up the *_quarto.yml* and notice one important difference to the YAML file shown in the lecture slides: the addition of the line `output-dir: docs` under `project`. This is important for getting the website to display properly when you use GitHub Pages.
8. Click on the *Terminal* tab in the RStudio console and enter `quarto preview`. Check that everything looks like it should.
9. Still in the Terminal, enter `quarto render`.

## Host the website using GitHub Pages

10. Return to the repository you create in Step 1-3. Click *Upload on existing file*.
11. Drag and drop **all** the files in your R project folder to the space provided. Click *Commit changes*.
12. Click *Settings*, then select the *Pages* option from the left-hand menu. Under *Branch*, where it says "None", select *Main* from the drop-down menu. Now change where it says "Root" (next to the button now saying "Main") to *Docs*. Then click *Save*.
13. Wait a minute or two for the website to build. Don't close the page, though you can refresh/reload it. Once the website is built you'll see a message near the top saying "Your site is live at..." and a URL taking you to your new website.
14. Click the URL and see that everything looks OK!

:::{.callout-note}
For now, if you want to make changes to your website you will need to manually upload and commit the new or updated files. Next lecture we'll see how to link your R Project to your GitHub repository so this can be done more directly.
:::